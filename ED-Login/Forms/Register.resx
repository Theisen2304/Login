<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EDLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>