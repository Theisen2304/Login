<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EDLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMEAAABOCAYAAACZpHKRAAAABGdBTUEAALGPC/xhBQAAGiVJREFUeF7t
        XAlUVkeWtrOnOx3jFk1iktbp2MkkMemOSSaT7qQzyelkOirrD//CKko0bogoOwKCGOMetWPcENkRRAka
        UEREUXBHWdwQ4q4ou8ha/X0v79GgP1lmPCdxpr5z6ryfulW37rt1761b9d6jh4SEhISEhISEhISEhISE
        hISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhMTdCiHEPSgP
        oDyE8iDKr1SShMT/H6iOcB/K/byq1RIS//dxqLT0bXuTQ42t3tCI0qwzGFujoqMj4Aj3qk3uKMgX5R71
        TwmJnx+FxcXvWNvZCxt7fUeJjY+fB0N9SG1yR1BZWflUQnKyX3R8YkhsYmIQiv/Ro0f/UyVLSPx8KCws
        fsdgdBAmBydhrzcKK2tbsWbtutl32gn2HTr0NlYaYWmrE1h5lOu6xMRpKllC4ufDkSNH/mKrsxc6O73Q
        G0yCDhEXlzALTnBHN8jFJ04oKw4dgMVKZyfipRNI/BJQVHT8L9oKYG2jE3b2BhETlzATDsAN8h1zgoNH
        jryP/YZg4SrAa2RcQgDG4IZcnkZJ/HwoKDj4Lg2fjsDC3+vWxQTfSeMEn/vyDx/+0MLGVjAl0js4Kk6w
        NiEhHDQezT6oNpW40yg5c+Z3Bw8efCUtLc10oLR0aFlZ2bMq6UfhThmBORQWFr6VlZdnKCgo6HZzWN3Y
        OAjyf/D1N9/4ZWZl6QpPnPgAMimnKz9GNrXtby9evPgi+Px3dvau0QeOFP0X6h5Vm1COd5kKaY7A1Cgq
        OjaI/FFuO8WpqKh4MR+yZ+fk2DOdSf9mq13RmTNvou2v1Sa36Q1/33+gqOgjpkE0/pHWNso1Zv36+aDx
        2YTSHtduT6RKTp16LXvXrmFxCQmTYhITJ+Tm5r5SWnp2qEq++5Aydnx07pgxaXkOLtv2GJ3y80ePLs6f
        NGmnSv5fIz09fbiXj0+OzmC4ZK3TVdvrHRp09vo6W52ubpLn1KIdO3ZYqU27ICwiItbaVndap7M7aXRw
        LMVE7b91QjUkrl8/Qac3ndSZTOXWesN5vdH0bX5+4Vuk7T98/M/gc9nWaKoFjzpcK/fs2/dX8LpnR0HB
        CI9p04sh1w1bO/um4LCwLIVhJyQnb/DwmDLtCo2TuTONx+jkLBhJaTxfLFu+4cyZM89/n9EQhSdPvjUz
        fHYpc3FGYDujSbna2NqJFSvWrDxzpuqx0tLS9zgO6zRHSEhICmR/8Odzg19dv369J1Ikv4mTPI8jZWpB
        u1byomw8TYJM7UhxbvoGBhVk5+UP13TGa0Bw8BaUrV5+/uc4NmXhSsB+/K3TG+p0BoeLNnpDCft0xqm6
        uscXLFmy2PWTsZfhOK0GR6c28mAxODjUDLe2ueY2xv344mXLwuGcvdRudwdq1q9/bvXQl2p3vfhCy+GB
        T4kTg54RBwY9Lfa++ccmsTvjcbXZ/wie06al2OntK1AumRwdaq1tbZqMRmObvQGTpdMJvRETgbqwsLAt
        mKSHURhVlcgaGBiYhn437e3thcFkbLTV646RprLuAkSkKTp7u2oUQd4o9YcPH/4zaQew2QQfQRoLeIki
        RMKM7Gxn1LewvY3OVhgdTCIwKGgH+3Cc6urqQd7e3sWWlpaCMphMMFo7nXBwclSuVjbWCi/eA65tmZmZ
        o9Hvfva/FemgcRzcqzIO5dBk0uv1wmAwCE9Pz2O7d++2Ve4Xf9vY2CjXuLg4zQm4Gjw6ZcqUI9ChsLP7
        7n7IR+Op8ad8lIsyzp0/d6kiBIA2DaRr98u+WlFkQR97k74B/crVLgqyEKjQpsnJxVlpy3GoB17Zh+Px
        /tT5FC4uLiU/daX/2SGys/sWDPtT05khg0Rl/17iUu9fi4rBT4rcF4eIplX/sFOb/ST4+PistzMazuod
        DBcxaddtbW0bnJ2db0BBzfitGBUNjIqlEoNCgjLZDxPNiHdvQEDAVk40jYKGAicoQb1ZJ4iOjZ2KSbzJ
        ieRk4HpDcwKmGJwcjjPS0kKZpA0bN85kO46rGQwNwyfAN5t9ME7vUS6uDbZIFZwQKVkoK+XRjN/R2Un5
        bWGFehgG69LS07o4AuXlJhQBoKMNr+zH8VnIk8bOoODk5CRo4Lxn1vM3nCBAZdfDy8urgG2pP+qEBcbc
        CBmuQ9eVzq4u1eTNMXhP1Afq2vbu3fsf7I+6a6zjvWpX3r8mG0oz/q6BrsqUAQFE9cGQU9Et75V82fZj
        i5HVaHcRcp+DnFfAq1XTKR3k0/Hjc1UWdxfyP/7g4onBA0Tl44+I2oF9xdmB/UXRSy+IK15TV6tNfhS+
        WrkyyMra+qy1jfUFGN0VKKXW3d29MCYmxisqKmr6ypUrZ7u6utaOGjVKMQgqGBPRunHz5nEwHEa8+0JD
        Q3dysjUnAP0M69UhuiA+Md6HPFg4Ebi28LiRRsgU428ffShoiNoEcpK06GnDsY2GOjujfW1oeOjX5AcH
        zuW4Dg7Im2GcFhYWYsyYMQ2RkZGLsndnu0THxMyc5j39kAmOQOeicZAvfrfTaDAuT3O4yXzAfewnV+kw
        dD4aHeXA3+0rVq34x7acHLekpKSAoKCgbRzP0RGrDO6ZDqA4Pn4nJib6U6Zdu3aZNJq2SsAp9nI/QzpR
        Xl7+RFBoSCp1QL3yHnlduHDhWtLBaxp1tXDpki+pCxo/C9tDhl1wOK+1a9d6MtdXGAL+Qf4pml4tra3o
        VALzG8J7VJv02L9//59x79+Sp+ZYBqPxKgLRH9Umdxcuu5gKjw9+Rpzr11PUPdlPXO7XSxxEelQyaSJz
        8t+ozbpFcXHxE1BaKRRyHZNdj2v9/Pnzv1DJHbhw4cKzcIJLmmFS0S6jXC9iDDrBvZwUGqDmBDo73TnU
        m3WCmLgYP/bXJgvXds0JMEHvkT+LFgFpHJxQOEP58jVrQvft2/cGnGXYsePHX0eq9CbGbKcDWFlZKUaH
        FKQCvDo2sBqWrVixmBNOnjRuGvqCxYuj0ZZO8FBeXp6O8rCeYyrGgdQOqRYdpcuqtmjRoqWa8dPIuQpQ
        BgQOP9IRFFJI5wqq6AP7mJMnT76odO6Eq1evPolxGikTx+O43v4+inNr4NNhjU79sw3G8VbJXYA2laRT
        d3T4iRMn5qukLuAGGQ7VwACjzIGdvmnTpm8cVfLdh0rf4LRDzz0nzvXvLWoef0xcHdBTHB3UT5zSfVwh
        8vKeUpuZBSYzmEsklKzk2y6jXWlAD6vkDqDuvhxEQii4CdGqnREJxtKMiPd3GgicYCcdoJMT0EHM5txw
        gkBOKovqBEJLhw4dOvRXGignsXNE9gnwzzUn19z585eSrhkH5Tp48OC7aGt2Uz7ZY/IlGhP70NGw4W9F
        2z4oD0TMjsjQnIBXyoEg8Q5oZtO68RMmHKfsNCTyYvqGqKw4QWRU1Fy/IP/t/kFBmcEzg7Oxj0pUOpkB
        5K4mD8rEcZFqblJJCujopHEsrmK8mnMC5vVwvlT0TwkMDkzHnikv/Zt0o0rugkMnTryKsarJl/rgBj+h
        04pyV0J8+eXEwtdeEed/N0BceOwBUdX/1+LEwMfErreGCZGePkxtdhvGjRu3ExGshpPIyZ+PCKeSuoCG
        gPIglHYRBtdCA0Gf9gULFiwnDZOcxcinOQGM8RINS+3eBWacoB3G/zZpBTBg1nNiWGjYcKgbh0q/o98K
        D68ppWynGe+4iZ+ewLhcncw6wcaNGyewPeXX+iEHt0D7+93c3Gq1dIMyYKWrUruZxZq1a8LZdvjIEYqc
        5In9jpIOdTf+rdicsdkW+mz6eMTwDpnCw8NTVbKCgoKC1ykXx9AKdGh2JegMyGDWeYnP581b9vfhH7co
        gQBj8ngXq8NklXz3AhvmYTtfe1mcGvQkUqNeoqbvI+J0n17iwIsvCLFk0W1LHZT0KHLVchotDYjRFMtn
        mb+//+ZZcz7bHjAjIDdkZuhO/xkBu4PDwnKDQkO3jxrt1oCJb9OiJTbEGVQ2r52dAIZ7BfVmH+SYcYJW
        LVfmKwKUQ5scTr63j/cepaMZWOlsq6zRjhGNRjR79uxNlAfFrBEyteAKQ6PjGIzAqyNX+6L9fZDlJuuY
        l/PqHxDwvZvFo0jJdNCFI/LukUjXuF+Jjo8PIg38mGJ1MUIezRYcO/Z6cnKyx7IvlwWNcXc/ALnpeO2u
        bqOUlA/33I6VY4PaRQFkHsZ66or6oF64V1PJP4i9Bw68lp2b/VdE+vHBwcHLsd8rgY5rtNWH+uZrH7Gx
        8R5ql7sb4sqVRy78/f2Ki716CtG7t2jq20tU9O8jcp4fLIq9PPZ2Ng4+DMMqcJk5LRXMQoXwygnhbxoY
        iwEGZgnDZxTikkxD4mQglarkZMMJttD4OznBNdSbfZEMmz3/W5ygCXsC5URkP9IiTow24fy9YtWqOUrH
        W7C/ZP/LNjodNsnfycy28YmJfFjVbQQsbyh/AilQE+VnezrzqjVrIs6ePTsUv1voAJpxxCX866THHLB/
        +RN0c5PGr4deqKdOTqDI8HVmpsO8hQvj6ayUFXLWQ4eNuDbh/lqRtzdDn0p6yYL6ZqQ069lXQ2FJyWvQ
        UYvmAJQPOuz23SGOnbg+0XOqt9d+zEO1vclYC751mM96nviNGDHiJgJGM3gq41J3TIewEfdUWdz9ELm5
        g68NHiJae/YTdT0fFZUD+oriZ58Sqa++LA7ErF2oNmP+/SqM9jpPLrSVAEppp6IZCZVoz4hMRTFCwjBo
        uFQcr2yPvnSC+xCBN2unIdwMwoiqUH9bDk8kb9jg28H/O2O/wbyXNKZF5N+5rFM3m7cC+fpLPClSZFOj
        d1RcnPJOjdrELGgQ5KvdQ8SciFh1XMUoWEcnWLdundlxNRwuKvojxm+k8WNFUJyATkgaZHjU09t7D+pa
        SKMOWTgmDR/86/UGwyVE/TjooRpO2cYx6SDYR3TZP/DUBv2a2BdFWRFi4uK8VHIXHD1//mmsMKfAq5nt
        WHA/TUwpca3j8TefC3w2Z84K0OiQbcr92mIVi46dqrK5e0FjFF8nfrzz9aHi6sDBouHRx0X1gKdExaBn
        xL6XhggR+ZUyQRq4ElApSuRWjdvH1zcjcf16H57gwPgC45KSAqNiY4PWxsTMiE2MD0F9aEpqKq5xM5D/
        hmCJ9cO490+ZMiWDpyNcCVjAr7Y7J1i5dq03x6PyOUkw3vp9RfveII3pCuXoXLpzAvB/hBFWMTAYIHl9
        Fbn6c9R3uycoPX16GHg2sS1l4JWbzKqqqsdgEIyOijMxtZq7YG6C2s0stJVAcwCulmvWrQvk2P4hQZk8
        klVWKfCDfIz6FQuXLFy04esN7rxPtFPSRWdXl/Mw2pvKympvVz9z5swu457AJhb0Rq7CNFrI3MbjUZXc
        AfB71G3M6DLeE/VGfuhXO3ny5ILVkZFB2/O2f4i083m25ekaVvFrPBig8zk4OmPlSzLrWHcVxLJ5HvuG
        /F6ce3yAaOo/QNT06y+K+z4tcl99Q4hdmWY3x4jaF5gOcdKpuMioyDCVpEA1KL5HoxwjovBJMa88V1ce
        lLFg4pSHZTwq5EpgYWNZj3qzewKef3OCOKm8jrS0qDt+/PhPdgLC2tr6MmXnRJJX+KxZ21SSWeTu2/cB
        T7do6ByfK8imLZs+IQ0GeJMGRF5M+SZNnnRK6dQNMrZl2DI14Yqm8WJg4NNryN1AHuDHh1LtHlM9cqCP
        36pduwBtv8U91EOmNj7/CAkLi1dJCrhi497qyQdtW5nOmUtdUjZudIbsygoAfo3g1zh/8fy5KrkLuE+A
        zFVYgVoZjCwsrcW6+Lv89eyKqRPSDrwyRFT2f0I09uorLvbpjRRokCj+m8UlcfFiP7XZbfDy8spWzvfV
        yffw8NirkhRg4rjJpKHT4B88/e23w5C/v3/s2LH3DhYWvlteXj6I7egE5MOzeqZXmIBmnq8rTG5BSGjo
        Zhosx6QxotTz7J80bpAx0R05Msv3OUFQaMgm7l80J4YMdZDzEZV8GxYsWLCQY/JetahfUlLyMmkzgoP3
        kA+NmWfsbLP/yJE/KR3NICIiIopt2JZ9yC82Pn7u5q1bRzG9oXHBQZohV1NaetpY9oFsXVYo/P2wlc76
        PPrWYuw2k4NDjV9gYJxKVsAVB3LWYawW8OR+piEyKmqKSu5AeHj415QFqU8r+N2Afrvdl23ZvsUaTsBX
        Y5Sjcb77lJy84Udvtn9R4Eb45MiRZUeefVZU9Okjmp/oLy717SP2D/l3cclr2iZRU9NbbWoWSG0mYZKU
        DSEnDcprzdqxQ6eSu4Avg7m6jVLe+WHkQ7/2bdu26Unz9vbO5BNU5Jti+PDhioEjP/ZROnYCT0gYyWhs
        3JzybB3jduwJfupKkJaW5oT0q115pcMJm12sasjlg1VyF5w+e/Y5GhFl5z2w8DRMJfdITU+dpNVzXF6R
        s6ep5C7ARvr3dDjugzgmx2YQiI2NXRgVFTWLKyKDAepa8bspJyfHpHbtgk3pm2ygi+vM2TEmU52awFuc
        AIHhNdC4j7kJ+Rt5D95+fkkquQO+vr5p6jzSWW5A/isq6TZ8Nu+zlRiLumjmSubo5NLtA7hfNMSenBeK
        3n6jsuzpAYKnQTVPDhAn+/YS+c/9mxDzFzNX/8GzarS5x2gylXPSabhQnnBxdanicgtaRzqTnZ2tHz9+
        /Ekt4rJ8OmF8sUruQQXSCJCefJcSoR1ShfaUtJQx5RfKX6Dxb92+3W70mNHKU2dGUKYLNEj83bhnz54O
        J8DfbdoYLNGx0b7KIN3A3d29jK9KaJtyyNG2Zs0a5ub/kj839wOTo+NlrkCaoXMF0SI0cR6bStLpnDQm
        /qZ8SE9WY1XreNOSqyDu8bSzs7Py6gTvWXtqnJSU9DkfKvJv6gN1rfw9b968aLV7B8rKyv4wxn1MGe63
        BvdJg+ShRC1W1S5OUF9f3x9OXgV6PXgqKwJXjNj4WP/M7dvf197s5YMy6gu6b+LqCr71iRsSbzsaz8rK
        soLc9dQB2jVTD3wDFhvj79XzLw4IOR/tf31o44Xf9RN1/X8jap/sKUoG9hHb33xNiJQks5G8O2zJ2OJM
        o4VS2qG4diWa6PWtMKgbiLI1+F0DA7vBqEfDpXFg2W3anpf3ocqix6lTp17ihpjRjxttRnjyUU5OsLrY
        ICLqMcmso3OQD/NpTgR5Ycnv7ARMITqc4Ici1ObNmy0/GePexBfojHzt2VZHh7gB+avB6xoM8Tr48IhQ
        cT6mQPzt5+9/QGXRAb6ro8qoODIDAyMl+jfi70rwvYz7rILhN9DpuAJQL3QAXrFhDa2pqfk9dNBCh6Qu
        uEpxhRw7dmxJdHT01KTUVK+lS5cuUmRzMFGuJsjVCr22Q0cNkz0901VxOoDN82XsF6ogzw3I1kZDt7Sy
        rELfOjjEBbZJT093VeVtgWE30MDRtiYwOHh58qZNn8JpPvXz89sGuWvQvxlj83lPC1MoxQlik+4OJ2Dk
        Pv/F8hlbXxoqjj71hLg6sK84//gj4vigfqLko3fKxO7sl9SmPwmLlyxeQGOlAagOoRROLI2GE06DZJSk
        USxetniZ2rUDAYEBGYx+nAitLU9ueLTKkxMLOheW6d17d1uQJw2Sxoi2bfuKirrfE8R3fyauYfny5YFw
        wBbKScOjHByDDkt5GdHJi+OxzsvH+yB0edv7Rai7z8tnWgHbajrQ+lJe/s3fiKRtfoF+OzkW+XFcjhcf
        H8/nFPfOmjUrie1YT31yr6TeKzflzZCvlY4GfbeNcnerIY16w1gtVtbWilF3RkhYyFf2JiONXjlK5Zj4
        3Qo+NxywwrENxn0EznIO9U0oyuafqSfGqUKfKvZHXT3qbriMduPLksq9cVx+IhoX990rH79oiHPn+hQG
        +25NGPoHsfsPz4ui554Xh54dLHY9/4I46Kg/IsSlH3xh7vvA9+id3UZX2xlNygcYykccBp702ELZ9q38
        QMXBxbUmITXVbGTGJDzkNc23gB+vaF9Caf8hgb8dXFwaM7NyHdHufvzdaHBEDs9/VaKza92jrgT88oof
        joywQjqifgSSmLj+Rz3Eyc8//KH7uPEnedzHSeW45E8e2kc1/Jjlq5Urv6yo+Fd6Yw4Lv1gaq334Qj7a
        F13kAx20LlmyZPHe/cfeUz60Rz0/smdbGNIMOkFtbW1fv6CQAksrG6We/5FC+RAGbVmglxYXN7fz2dgr
        fL548TKOATlbLO3s63Umh0qmQKooCqjbydOmp/NjI/Bpho74f47qUa7pnZwvqs16FGNFdnYd9S3bmJxd
        xMcWlu2g3wT/Oht7Y5WNwVg5duLEXWyH+7vJD3woF+cpOCw8R2Xzy8VJbFiPhM/4h1i+cEG1l9ccMSMs
        QsxcMPvGoq/u2PkulP1wzp499oEzZ64LDQ9PhZLrpvv5bQ8MnrkxJSVtzOnr159Rm3aLlLS0saGzZ6d4
        +fhkfTJ+fN2UaT5bI2PjPyu7cEH5cINGEh2f6B8ZHe2PTa930oYN0/k2JWm8ro1P9IxOSp4el5Tqxd98
        PYG0HwPw/k1mbq5hDnLwaf7+m8Z+Ov7yJE/PHeGzZ2+KiUvw5tuwatMfRFZWzt8+m7sgwW3cuNNGJ+fm
        0ePGHQ2fPWdVAVI20iuqqwfHJSUFxyQkheJeQvjK9v7S0vd4fyjKA7vMrCzHsIjZGQZEa36hB4evhm43
        fJ2R4YY2ymeVfEoek5DgFxUdPT06KWkq75n7BdJuRV5+/oekB4WGrvcNDokPj/h86aqoqPEqWQH5pqSm
        Tpng4ZFtdHG9Aqe64Og8Kjdi/vwvtufkWKvNemRgn7cqOtYnNjnZNyF5www+41BJv2xoysX1Bze9EhIS
        EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
        EhISEhISEhISEhISEhISEhISEhI/E3r0+CeBo8ujr4n9oAAAAABJRU5ErkJggg==
</value>
  </data>
</root>